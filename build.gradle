/*
 * Eclipse notes: In order to build and run services via Eclipse,
 * one needs to include the following directories in webapp (they
 * are ignored by git):
 *
 *   webapp/
 *      models/
 *         ak/
 *            2007/
 *         wus/
 *            2008/
 *            2014/
 *            2014b/
 *            2018/
 *         ceus/
 *            2008/
 *            2014/
 *            2018/
 *
 * ...with each 'year' directory being an alias to the corresponding
 * git repository. One also must set Properties > Deployment Assembly
 * to include the nshmp-haz project and the 'webapp' directory. Other
 * default Eclipse directories such as WebContent may be deleted.
 */

apply plugin: 'war'
apply plugin: 'eclipse-wtp'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
  mavenCentral()
}

dependencies {
  providedCompile 'org.apache.tomcat:tomcat-catalina:8.0.45'
  providedCompile 'javax.websocket:javax.websocket-api:1.1'
  providedCompile 'com.amazonaws:aws-lambda-java-core:1.1.0'
  providedCompile 'com.amazonaws:aws-java-sdk-lambda:1.11.461'
  providedCompile 'com.amazonaws:aws-java-sdk-s3:1.11.579'
  providedCompile 'com.amazonaws:aws-java-sdk-ec2:1.11.619'
  compile project(':nshmp-haz')
}

sourceSets {
  main {
    java {
      srcDirs = ['src']
    }

    resources {
      srcDirs = ['src']
      exclude '**/*.java'
    }
  }
}

ext {
  getGitTag = { gitDir -> 
    def cmd = 'git --git-dir=' + gitDir + '/.git describe --tags'
    return cmd.execute().text.replace('\n', '') ?: 'unknown'
  }
  propsPath = '/classes/java/main/service.properties'

  /* Multi-model repository paths for version tracking */
  repo_cous_2008 = '../nshm-cous-2008'
  repo_cous_2014 = '../nshm-cous-2014'
  repo_cous_2014b = '../nshm-cous-2014b'
  repo_cous_2018 = '../nshm-cous-2018'
  repo_ak_2007 = '../nshm-ak-2007'
  
  /* Explicit model paths */
  model_wus_2008 = "${repo_cous_2008}/Western US"
  model_ceus_2008 = "${repo_cous_2008}/Central & Eastern US"
  model_wus_2014 = "${repo_cous_2014}/Western US"
  model_ceus_2014 = "${repo_cous_2014}/Central & Eastern US"
  model_wus_2014b = "${repo_cous_2014b}/Western US"
  model_wus_2018 = "${repo_cous_2018}/Western US"
  model_ceus_2018 = "${repo_cous_2018}/Central & Eastern US"
  model_ak_2007 = "${repo_ak_2007}"

  /* Production models */
  prod_models = [
    [ model_ak_2007, 'models/ak/2007' ],
    [ model_ceus_2008, 'models/ceus/2008' ],
    [ model_wus_2008, 'models/wus/2008' ],
    [ model_ceus_2014, 'models/ceus/2014' ],
    [ model_wus_2014, 'models/wus/2014' ],
    [ model_wus_2014b, 'models/wus/2014b' ],
    [ model_ceus_2018, 'models/ceus/2018' ],
    [ model_wus_2018, 'models/wus/2018' ],
  ]
}

/**
 * Create war file with production models
 */
war {
  enabled = true
  webAppDirName = 'webapp'
  
  /* 
   * Exclude existing models directory with symlinks
   * to support Eclipse deployments.
   */
  exclude 'models'

  prod_models.each{model ->
    from(model[0]) { into model[1] }
  }

  doFirst {
    /* Record service and model versions */
    writeProperties()
  }
}

/**
 * Create am exploded war file with production models
 */
task assembleUsgs(type: Sync) {
  into "${libsDir}/exploded-war"
  with war

  doFirst {
    /* Record service and model versions */
    writeProperties()
  }
}

/**
 * Create a zip file of all dependencies
 */
task dependencies(type: Zip) {
  baseName = "nshmp-haz-ws-dependencies"
  from {
    configurations.compile.collect {
      it
    }
  }

  into("java/lib")
  
  destinationDir libsDir
}

/**
 * Create properties file
 */
def writeProperties() {
  def props = new Properties()
  def propsFile = new File(project.buildDir.toString() + propsPath)
  propsFile.createNewFile()
  props.setProperty('app.version', getGitTag('.'))
  props.setProperty('E2007.version', getGitTag(repo_ak_2007))
  props.setProperty('E2008.version', getGitTag(repo_cous_2008))
  props.setProperty('E2014.version', getGitTag(repo_cous_2014))
  props.setProperty('E2014B.version', getGitTag(repo_cous_2014b))
  props.setProperty('E2018.version', getGitTag(repo_cous_2018))
  props.store(propsFile.newWriter(), null)
}
